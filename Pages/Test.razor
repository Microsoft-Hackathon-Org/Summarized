@* Testing page *@
@page "/test"
@using Helpers
@using Microsoft.Identity.Web
@using Microsoft.Graph
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler


<h1>Me</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{  
    <table class="table table-striped table-condensed" style="font-family: monospace">
        
        <tr>
            <td>@user.DisplayName</td>
            <td>@user.Mail</td>
        </tr>
    </table>
    <button class="btn btn-default" @onclick="() => SendEmail()"> Send Email</button>
}


@code {
    User? user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await GraphServiceClient.Me.Request().GetAsync();
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}

@code {
    private async Task SendEmail()
    {
        @* var graphServiceClient = GraphServiceClientProvider.GetAuthenticatedClient(); *@
        var user = await GraphServiceClient.Me.Request().GetAsync();
        var email = user.Mail;
        var name = user.DisplayName;
        var subject = "hello from summarized testbot";
        var emailBody = "test body";

        await GraphServiceHelper.SendEmail(GraphServiceClient, email, subject, emailBody);
    }
}

